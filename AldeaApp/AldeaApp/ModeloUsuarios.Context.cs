//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AldeaApp
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class DB_AldeaEntities : DbContext
    {
        public DB_AldeaEntities()
            : base("name=DB_AldeaEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<Tb_Pagos> Tb_Pagos { get; set; }
        public virtual DbSet<Tb_Usuarios> Tb_Usuarios { get; set; }
        public virtual DbSet<Tb_ParametrosInformativos> Tb_ParametrosInformativos { get; set; }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int Usp_ActualizarParametro(Nullable<int> id, string descripcion, string valor)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            var valorParameter = valor != null ?
                new ObjectParameter("valor", valor) :
                new ObjectParameter("valor", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_ActualizarParametro", idParameter, descripcionParameter, valorParameter);
        }
    
        public virtual int Usp_ActualizarUsuario(Nullable<int> idusuario, string tipoIdentificacion, string numIdentificacion, string nombresUsuario, string apellidosUsuario, Nullable<System.DateTime> fechaNacimiento, string ciudadNacimiento, string departamentoNacimiento, string paisNacimiento, string ciudadResidencia, string departamentoResidencia, string paisResidencia, string direccionResidencia, string telefonoFijo, string telefonoCelular, string correoElectronico, string institucionEgreso, string anioEgreso, string tipoAfiliciacion, string tituloPregrado, string institucionPregrado, string anioGraduacionPregrado, string tituloPosgrado, string institucionPosgrado, string anioGraduacionPosgrado, string nomEmpresaTrabajo, string cargo, string direccionEmpresa, string telefonoEmpresa, string contrasenia)
        {
            var idusuarioParameter = idusuario.HasValue ?
                new ObjectParameter("idusuario", idusuario) :
                new ObjectParameter("idusuario", typeof(int));
    
            var tipoIdentificacionParameter = tipoIdentificacion != null ?
                new ObjectParameter("TipoIdentificacion", tipoIdentificacion) :
                new ObjectParameter("TipoIdentificacion", typeof(string));
    
            var numIdentificacionParameter = numIdentificacion != null ?
                new ObjectParameter("NumIdentificacion", numIdentificacion) :
                new ObjectParameter("NumIdentificacion", typeof(string));
    
            var nombresUsuarioParameter = nombresUsuario != null ?
                new ObjectParameter("NombresUsuario", nombresUsuario) :
                new ObjectParameter("NombresUsuario", typeof(string));
    
            var apellidosUsuarioParameter = apellidosUsuario != null ?
                new ObjectParameter("ApellidosUsuario", apellidosUsuario) :
                new ObjectParameter("ApellidosUsuario", typeof(string));
    
            var fechaNacimientoParameter = fechaNacimiento.HasValue ?
                new ObjectParameter("FechaNacimiento", fechaNacimiento) :
                new ObjectParameter("FechaNacimiento", typeof(System.DateTime));
    
            var ciudadNacimientoParameter = ciudadNacimiento != null ?
                new ObjectParameter("CiudadNacimiento", ciudadNacimiento) :
                new ObjectParameter("CiudadNacimiento", typeof(string));
    
            var departamentoNacimientoParameter = departamentoNacimiento != null ?
                new ObjectParameter("DepartamentoNacimiento", departamentoNacimiento) :
                new ObjectParameter("DepartamentoNacimiento", typeof(string));
    
            var paisNacimientoParameter = paisNacimiento != null ?
                new ObjectParameter("PaisNacimiento", paisNacimiento) :
                new ObjectParameter("PaisNacimiento", typeof(string));
    
            var ciudadResidenciaParameter = ciudadResidencia != null ?
                new ObjectParameter("CiudadResidencia", ciudadResidencia) :
                new ObjectParameter("CiudadResidencia", typeof(string));
    
            var departamentoResidenciaParameter = departamentoResidencia != null ?
                new ObjectParameter("DepartamentoResidencia", departamentoResidencia) :
                new ObjectParameter("DepartamentoResidencia", typeof(string));
    
            var paisResidenciaParameter = paisResidencia != null ?
                new ObjectParameter("PaisResidencia", paisResidencia) :
                new ObjectParameter("PaisResidencia", typeof(string));
    
            var direccionResidenciaParameter = direccionResidencia != null ?
                new ObjectParameter("DireccionResidencia", direccionResidencia) :
                new ObjectParameter("DireccionResidencia", typeof(string));
    
            var telefonoFijoParameter = telefonoFijo != null ?
                new ObjectParameter("TelefonoFijo", telefonoFijo) :
                new ObjectParameter("TelefonoFijo", typeof(string));
    
            var telefonoCelularParameter = telefonoCelular != null ?
                new ObjectParameter("TelefonoCelular", telefonoCelular) :
                new ObjectParameter("TelefonoCelular", typeof(string));
    
            var correoElectronicoParameter = correoElectronico != null ?
                new ObjectParameter("CorreoElectronico", correoElectronico) :
                new ObjectParameter("CorreoElectronico", typeof(string));
    
            var institucionEgresoParameter = institucionEgreso != null ?
                new ObjectParameter("InstitucionEgreso", institucionEgreso) :
                new ObjectParameter("InstitucionEgreso", typeof(string));
    
            var anioEgresoParameter = anioEgreso != null ?
                new ObjectParameter("AnioEgreso", anioEgreso) :
                new ObjectParameter("AnioEgreso", typeof(string));
    
            var tipoAfiliciacionParameter = tipoAfiliciacion != null ?
                new ObjectParameter("TipoAfiliciacion", tipoAfiliciacion) :
                new ObjectParameter("TipoAfiliciacion", typeof(string));
    
            var tituloPregradoParameter = tituloPregrado != null ?
                new ObjectParameter("TituloPregrado", tituloPregrado) :
                new ObjectParameter("TituloPregrado", typeof(string));
    
            var institucionPregradoParameter = institucionPregrado != null ?
                new ObjectParameter("InstitucionPregrado", institucionPregrado) :
                new ObjectParameter("InstitucionPregrado", typeof(string));
    
            var anioGraduacionPregradoParameter = anioGraduacionPregrado != null ?
                new ObjectParameter("AnioGraduacionPregrado", anioGraduacionPregrado) :
                new ObjectParameter("AnioGraduacionPregrado", typeof(string));
    
            var tituloPosgradoParameter = tituloPosgrado != null ?
                new ObjectParameter("TituloPosgrado", tituloPosgrado) :
                new ObjectParameter("TituloPosgrado", typeof(string));
    
            var institucionPosgradoParameter = institucionPosgrado != null ?
                new ObjectParameter("InstitucionPosgrado", institucionPosgrado) :
                new ObjectParameter("InstitucionPosgrado", typeof(string));
    
            var anioGraduacionPosgradoParameter = anioGraduacionPosgrado != null ?
                new ObjectParameter("AnioGraduacionPosgrado", anioGraduacionPosgrado) :
                new ObjectParameter("AnioGraduacionPosgrado", typeof(string));
    
            var nomEmpresaTrabajoParameter = nomEmpresaTrabajo != null ?
                new ObjectParameter("NomEmpresaTrabajo", nomEmpresaTrabajo) :
                new ObjectParameter("NomEmpresaTrabajo", typeof(string));
    
            var cargoParameter = cargo != null ?
                new ObjectParameter("Cargo", cargo) :
                new ObjectParameter("Cargo", typeof(string));
    
            var direccionEmpresaParameter = direccionEmpresa != null ?
                new ObjectParameter("DireccionEmpresa", direccionEmpresa) :
                new ObjectParameter("DireccionEmpresa", typeof(string));
    
            var telefonoEmpresaParameter = telefonoEmpresa != null ?
                new ObjectParameter("TelefonoEmpresa", telefonoEmpresa) :
                new ObjectParameter("TelefonoEmpresa", typeof(string));
    
            var contraseniaParameter = contrasenia != null ?
                new ObjectParameter("Contrasenia", contrasenia) :
                new ObjectParameter("Contrasenia", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_ActualizarUsuario", idusuarioParameter, tipoIdentificacionParameter, numIdentificacionParameter, nombresUsuarioParameter, apellidosUsuarioParameter, fechaNacimientoParameter, ciudadNacimientoParameter, departamentoNacimientoParameter, paisNacimientoParameter, ciudadResidenciaParameter, departamentoResidenciaParameter, paisResidenciaParameter, direccionResidenciaParameter, telefonoFijoParameter, telefonoCelularParameter, correoElectronicoParameter, institucionEgresoParameter, anioEgresoParameter, tipoAfiliciacionParameter, tituloPregradoParameter, institucionPregradoParameter, anioGraduacionPregradoParameter, tituloPosgradoParameter, institucionPosgradoParameter, anioGraduacionPosgradoParameter, nomEmpresaTrabajoParameter, cargoParameter, direccionEmpresaParameter, telefonoEmpresaParameter, contraseniaParameter);
        }
    
        public virtual ObjectResult<Usp_BuscarUsuario_Result> Usp_BuscarUsuario(string tipoIdentificacion, string numIdentificacion)
        {
            var tipoIdentificacionParameter = tipoIdentificacion != null ?
                new ObjectParameter("TipoIdentificacion", tipoIdentificacion) :
                new ObjectParameter("TipoIdentificacion", typeof(string));
    
            var numIdentificacionParameter = numIdentificacion != null ?
                new ObjectParameter("NumIdentificacion", numIdentificacion) :
                new ObjectParameter("NumIdentificacion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Usp_BuscarUsuario_Result>("Usp_BuscarUsuario", tipoIdentificacionParameter, numIdentificacionParameter);
        }
    
        public virtual int Usp_CrearUsuario(string tipoIdentificacion, string numIdentificacion, string nombresUsuario, string apellidosUsuario, Nullable<System.DateTime> fechaNacimiento, string ciudadNacimiento, string departamentoNacimiento, string paisNacimiento, string ciudadResidencia, string departamentoResidencia, string paisResidencia, string direccionResidencia, string telefonoFijo, string telefonoCelular, string correoElectronico, string institucionEgreso, string anioEgreso, string tipoAfiliciacion, string tituloPregrado, string institucionPregrado, string anioGraduacionPregrado, string tituloPosgrado, string institucionPosgrado, string anioGraduacionPosgrado, string nomEmpresaTrabajo, string cargo, string direccionEmpresa, string telefonoEmpresa, string contrasenia)
        {
            var tipoIdentificacionParameter = tipoIdentificacion != null ?
                new ObjectParameter("TipoIdentificacion", tipoIdentificacion) :
                new ObjectParameter("TipoIdentificacion", typeof(string));
    
            var numIdentificacionParameter = numIdentificacion != null ?
                new ObjectParameter("NumIdentificacion", numIdentificacion) :
                new ObjectParameter("NumIdentificacion", typeof(string));
    
            var nombresUsuarioParameter = nombresUsuario != null ?
                new ObjectParameter("NombresUsuario", nombresUsuario) :
                new ObjectParameter("NombresUsuario", typeof(string));
    
            var apellidosUsuarioParameter = apellidosUsuario != null ?
                new ObjectParameter("ApellidosUsuario", apellidosUsuario) :
                new ObjectParameter("ApellidosUsuario", typeof(string));
    
            var fechaNacimientoParameter = fechaNacimiento.HasValue ?
                new ObjectParameter("FechaNacimiento", fechaNacimiento) :
                new ObjectParameter("FechaNacimiento", typeof(System.DateTime));
    
            var ciudadNacimientoParameter = ciudadNacimiento != null ?
                new ObjectParameter("CiudadNacimiento", ciudadNacimiento) :
                new ObjectParameter("CiudadNacimiento", typeof(string));
    
            var departamentoNacimientoParameter = departamentoNacimiento != null ?
                new ObjectParameter("DepartamentoNacimiento", departamentoNacimiento) :
                new ObjectParameter("DepartamentoNacimiento", typeof(string));
    
            var paisNacimientoParameter = paisNacimiento != null ?
                new ObjectParameter("PaisNacimiento", paisNacimiento) :
                new ObjectParameter("PaisNacimiento", typeof(string));
    
            var ciudadResidenciaParameter = ciudadResidencia != null ?
                new ObjectParameter("CiudadResidencia", ciudadResidencia) :
                new ObjectParameter("CiudadResidencia", typeof(string));
    
            var departamentoResidenciaParameter = departamentoResidencia != null ?
                new ObjectParameter("DepartamentoResidencia", departamentoResidencia) :
                new ObjectParameter("DepartamentoResidencia", typeof(string));
    
            var paisResidenciaParameter = paisResidencia != null ?
                new ObjectParameter("PaisResidencia", paisResidencia) :
                new ObjectParameter("PaisResidencia", typeof(string));
    
            var direccionResidenciaParameter = direccionResidencia != null ?
                new ObjectParameter("DireccionResidencia", direccionResidencia) :
                new ObjectParameter("DireccionResidencia", typeof(string));
    
            var telefonoFijoParameter = telefonoFijo != null ?
                new ObjectParameter("TelefonoFijo", telefonoFijo) :
                new ObjectParameter("TelefonoFijo", typeof(string));
    
            var telefonoCelularParameter = telefonoCelular != null ?
                new ObjectParameter("TelefonoCelular", telefonoCelular) :
                new ObjectParameter("TelefonoCelular", typeof(string));
    
            var correoElectronicoParameter = correoElectronico != null ?
                new ObjectParameter("CorreoElectronico", correoElectronico) :
                new ObjectParameter("CorreoElectronico", typeof(string));
    
            var institucionEgresoParameter = institucionEgreso != null ?
                new ObjectParameter("InstitucionEgreso", institucionEgreso) :
                new ObjectParameter("InstitucionEgreso", typeof(string));
    
            var anioEgresoParameter = anioEgreso != null ?
                new ObjectParameter("AnioEgreso", anioEgreso) :
                new ObjectParameter("AnioEgreso", typeof(string));
    
            var tipoAfiliciacionParameter = tipoAfiliciacion != null ?
                new ObjectParameter("TipoAfiliciacion", tipoAfiliciacion) :
                new ObjectParameter("TipoAfiliciacion", typeof(string));
    
            var tituloPregradoParameter = tituloPregrado != null ?
                new ObjectParameter("TituloPregrado", tituloPregrado) :
                new ObjectParameter("TituloPregrado", typeof(string));
    
            var institucionPregradoParameter = institucionPregrado != null ?
                new ObjectParameter("InstitucionPregrado", institucionPregrado) :
                new ObjectParameter("InstitucionPregrado", typeof(string));
    
            var anioGraduacionPregradoParameter = anioGraduacionPregrado != null ?
                new ObjectParameter("AnioGraduacionPregrado", anioGraduacionPregrado) :
                new ObjectParameter("AnioGraduacionPregrado", typeof(string));
    
            var tituloPosgradoParameter = tituloPosgrado != null ?
                new ObjectParameter("TituloPosgrado", tituloPosgrado) :
                new ObjectParameter("TituloPosgrado", typeof(string));
    
            var institucionPosgradoParameter = institucionPosgrado != null ?
                new ObjectParameter("InstitucionPosgrado", institucionPosgrado) :
                new ObjectParameter("InstitucionPosgrado", typeof(string));
    
            var anioGraduacionPosgradoParameter = anioGraduacionPosgrado != null ?
                new ObjectParameter("AnioGraduacionPosgrado", anioGraduacionPosgrado) :
                new ObjectParameter("AnioGraduacionPosgrado", typeof(string));
    
            var nomEmpresaTrabajoParameter = nomEmpresaTrabajo != null ?
                new ObjectParameter("NomEmpresaTrabajo", nomEmpresaTrabajo) :
                new ObjectParameter("NomEmpresaTrabajo", typeof(string));
    
            var cargoParameter = cargo != null ?
                new ObjectParameter("Cargo", cargo) :
                new ObjectParameter("Cargo", typeof(string));
    
            var direccionEmpresaParameter = direccionEmpresa != null ?
                new ObjectParameter("DireccionEmpresa", direccionEmpresa) :
                new ObjectParameter("DireccionEmpresa", typeof(string));
    
            var telefonoEmpresaParameter = telefonoEmpresa != null ?
                new ObjectParameter("TelefonoEmpresa", telefonoEmpresa) :
                new ObjectParameter("TelefonoEmpresa", typeof(string));
    
            var contraseniaParameter = contrasenia != null ?
                new ObjectParameter("Contrasenia", contrasenia) :
                new ObjectParameter("Contrasenia", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_CrearUsuario", tipoIdentificacionParameter, numIdentificacionParameter, nombresUsuarioParameter, apellidosUsuarioParameter, fechaNacimientoParameter, ciudadNacimientoParameter, departamentoNacimientoParameter, paisNacimientoParameter, ciudadResidenciaParameter, departamentoResidenciaParameter, paisResidenciaParameter, direccionResidenciaParameter, telefonoFijoParameter, telefonoCelularParameter, correoElectronicoParameter, institucionEgresoParameter, anioEgresoParameter, tipoAfiliciacionParameter, tituloPregradoParameter, institucionPregradoParameter, anioGraduacionPregradoParameter, tituloPosgradoParameter, institucionPosgradoParameter, anioGraduacionPosgradoParameter, nomEmpresaTrabajoParameter, cargoParameter, direccionEmpresaParameter, telefonoEmpresaParameter, contraseniaParameter);
        }
    
        public virtual int Usp_ModificarParametros(Nullable<int> idParametros, string descripcion, Nullable<int> valor)
        {
            var idParametrosParameter = idParametros.HasValue ?
                new ObjectParameter("IdParametros", idParametros) :
                new ObjectParameter("IdParametros", typeof(int));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var valorParameter = valor.HasValue ?
                new ObjectParameter("Valor", valor) :
                new ObjectParameter("Valor", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_ModificarParametros", idParametrosParameter, descripcionParameter, valorParameter);
        }
    
        public virtual ObjectResult<Usp_MostrarUsuarios_Result> Usp_MostrarUsuarios()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Usp_MostrarUsuarios_Result>("Usp_MostrarUsuarios");
        }
    
        public virtual ObjectResult<Usp_SeleccionarParametro_Result> Usp_SeleccionarParametro(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Usp_SeleccionarParametro_Result>("Usp_SeleccionarParametro", idParameter);
        }
    }
}
